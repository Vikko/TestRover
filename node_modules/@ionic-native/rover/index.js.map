{"version":3,"sources":["../../../src/@ionic-native/plugins/rover/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;GAWG;AACH,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AACxE,+HAA+H;AAC/H,gDAAgD;AAEhD;;;;;;;;;;;;;;;GAeG;AAQH,IAAa,KAAK;IAAS,yBAAiB;IAA5C;;IA2BA,CAAC;IAzBC;;;;OAIG;IAEH,6BAAa,GAAb;QACE,MAAM,CAAC,CAAC,yDAAyD;IACnE,CAAC;IAED;;;OAGG;IAEH,4BAAY,GAAZ;QACE,MAAM,CAAC,CAAC,yDAAyD;IACnE,CAAC;IAQH,YAAC;AAAD,CA3BA,AA2BC,CA3B0B,iBAAiB,GA2B3C;AANM,gBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,oBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAlBA;IADC,OAAO,EAAE;;;;0CAGT;AAOD;IADC,OAAO,EAAE;;;;yCAGT;AAnBU,KAAK;IAPjB,MAAM,CAAC;QACN,UAAU,EAAE,OAAO;QACnB,MAAM,EAAE,sBAAsB;QAC9B,SAAS,EAAE,iBAAiB;QAC5B,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,4DAA4D;KACpF,CAAC;GAEW,KAAK,CA2BjB;SA3BY,KAAK","file":"index.js","sourceRoot":"","sourcesContent":["/**\n * This is a template for new plugin wrappers\n *\n * TODO:\n * - Add/Change information below\n * - Document usage (importing, executing main functionality)\n * - Remove any imports that you are not using\n * - Add this file to /src/index.ts (follow style of other plugins)\n * - Remove all the comments included in this template, EXCEPT the @Plugin wrapper docs and any other docs you added\n * - Remove this note\n *\n */\nimport { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n// import { Plugin, Cordova, CordovaProperty, CordovaInstance, InstanceProperty, IonicNativePlugin } from '@ionic-native/core';\n// import { Observable } from 'rxjs/Observable';\n\n/**\n * @name Rover\n * @description\n * Wrapper to call the Cordova Rover from Ionic\n *\n * @usage\n * ```typescript\n * import { Rover } from '@ionic-native/rover';\n *\n *\n * constructor(private Rover: Rover) { }\n *\n * ...\n *\n * ```\n */\n@Plugin({\n  pluginName: 'Rover',\n  plugin: 'cordova-plugin-rover', // npm package name, example: cordova-plugin-camera\n  pluginRef: 'navigator.rover', // the variable reference to call the plugin, example: navigator.geolocation\n  platforms: ['Android'] // Array of platforms supported, example: ['Android', 'iOS']\n})\n\nexport class Rover extends IonicNativePlugin {\n\n  /**\n   * Start the GPS tracking\n   * <@param arg1 {string} Some param to configure something>\n   * @return {Promise<any>} Returns a promise when succesful.\n   */\n  @Cordova()\n  startTracking(): Promise<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  /**\n   * Stop the GPS tracking\n   * @return {Promise<any>} Returns a promise when succesful.\n   */\n  @Cordova()\n  stopTracking(): Promise<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}